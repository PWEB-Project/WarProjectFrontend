name: Frontend Docker image build

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test --if-present
    
    - uses: google-github-actions/setup-gcloud@v0.6.0
    - name: Get the version
      id: get_tag_name
      run: echo ::set-output name=GIT_TAG_NAME::${GITHUB_REF/refs\/tags\//}
    - uses: RafikFarhad/push-to-gcr-github-action@v4
      with:
        gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
        registry: gcr.io
        project_id: pweb-idp
        image_name: frontend
        image_tag: ${{ steps.get_tag_name.outputs.GIT_TAG_NAME}}
        dockerfile: ./Dockerfile

    - name: Generate Kubernetes manifest file with updated image tag
      uses: 1arp/create-a-file-action@0.2
        with:
          file: 'manifest.yaml'
          content: |
            apiVersion: v1
            kind: Service
            metadata:
              name: frontend
              labels:
                app: frontend
            spec:
              selector:
                app: frontend
              type: ClusterIP
              ports:
                - port: 8080
                  targetPort: 8080
            ---
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: frontend
              labels:
                app: frontend
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: frontend
              template:
                metadata:
                  labels:
                    app: frontend
                spec:
                  containers:
                  - name: frontend
                    image: gcr.io/pweb-idp/frontend:${{ steps.get_tag_name.outputs.GIT_TAG_NAME}}
                    ports:
                    - containerPort: 8080
